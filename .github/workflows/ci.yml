name: Build and Deploy Train Lag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            builds: ['mac', 'mac-arm']
          - os: windows-latest
            builds: ['win']
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Yarn
        run: npm install -g yarn

      # Windows-specific setup
      - name: Setup Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          npm config set python python3.11
          npm config set msvs_version 2019

      # macOS-specific setup
      - name: Setup macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install pkg-config cairo pango libpng jpeg giflib librsvg

      - name: Install dependencies
        run: |
          yarn config set python python3.11
          yarn install --frozen-lockfile --network-timeout 300000

      - name: Build TypeScript
        run: yarn build

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          yarn electron-rebuild
          yarn pack:win
        env:
          PYTHON: python3.11
        
      - name: Build macOS (Intel)
        if: matrix.os == 'macos-latest'
        run: |
          yarn electron-rebuild -a x64
          yarn pack:mac
        env:
          PYTHON: python3.11
        
      - name: Build macOS (Apple Silicon)
        if: matrix.os == 'macos-latest'
        run: |
          yarn electron-rebuild -a arm64
          yarn pack:mac-arm
        env:
          PYTHON: python3.11

      - name: Upload Windows Build
        if: matrix.os == 'windows-latest'
        run: |
          curl -v -F "file=@dist/Train Lag Setup.exe" http://162.19.154.182:9000/cdn/upload
        
      - name: Upload macOS Intel Build
        if: matrix.os == 'macos-latest'
        run: |
          curl -v -F "file=@dist/Train Lag-x64.dmg" http://162.19.154.182:9000/cdn/upload
          
      - name: Upload macOS ARM Build
        if: matrix.os == 'macos-latest'
        run: |
          curl -v -F "file=@dist/Train Lag-arm64.dmg" http://162.19.154.182:9000/cdn/upload

      - name: Upload Artifacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-builds
          path: |
            dist/*.exe
            dist/*.dmg
          retention-days: 5